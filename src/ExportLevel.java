import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;

public class ExportLevel {
	ExportLevel(String filepath, Level level){
		PrintWriter writer;
		try {
			writer = new PrintWriter(filepath + ".lua", "UTF-8");
			writer.println("--This is autogenerated by colorwalkeditor.\n");
			writer.println("local " + level.getName() + " = { background, foreground, objects = {}, objectCount, nextLevel};");
			writer.println(level.getName() + ".background = \"" + level.backgroundImagePath + "\";");
			writer.println(level.getName() + ".foreground = \"" + level.foregroundImagePath + "\";");
			writer.println(level.getName() + ".objectCount = " + level.objectCount + ";");
			writer.println(level.getName() + ".nextLevel = " + level.nextLevel + ";");
			ArrayList<Touchable> objects = level.getSprites();
			int i = 1;
			for(Touchable obj : objects){
				writer.println("--------------------------------------------------------");
				writer.println("--------------------------------------------------------");
				writer.println("--------------------------------------------------------");
				writer.println(level.getName() + ".objects[" + i + "] = {};");
				writer.println(level.getName() + ".objects[" + i + "].ID          = "+ obj.ID         + ";");
				writer.println(level.getName() + ".objects[" + i + "].imagePath   = \""+ obj.imagePath  + "\";");
				writer.println(level.getName() + ".objects[" + i + "].soundPath   = \""+ obj.soundPath  + "\";");
				writer.println(level.getName() + ".objects[" + i + "].touchableId = \""+ obj.touchableId+ "\";");
				writer.println(level.getName() + ".objects[" + i + "].imageName   = \""+ obj.imageName  + "\";");
				writer.println(level.getName() + ".objects[" + i + "].soundName   = \""+ obj.soundName  + "\";");
				writer.println(level.getName() + ".objects[" + i + "].imageX      = "+ obj.imageX     + ";");
				writer.println(level.getName() + ".objects[" + i + "].imageY      = "+ obj.imageY     + ";");
				writer.println(level.getName() + ".objects[" + i + "].width       = "+ obj.width      + ";");
				writer.println(level.getName() + ".objects[" + i + "].height      = "+ obj.height     + ";");
				writer.println(level.getName() + ".objects[" + i + "].scaleX      = "+ obj.scaleX     + ";");
				writer.println(level.getName() + ".objects[" + i + "].scaleY      = "+ obj.scaleY     + ";");
				writer.println(level.getName() + ".objects[" + i + "].screenY     = "+ obj.screenY    + ";");
				writer.println(level.getName() + ".objects[" + i + "].screenX     = "+ obj.screenX    + ";");
				writer.println(level.getName() + ".objects[" + i + "].rotation    = "+ obj.rotation   + ";");
				writer.println(level.getName() + ".objects[" + i + "].isFinal     = \""+ obj.isFinal    + "\";");
				writer.println("--------------------------------------------------------");
				writer.println("--------------------------------------------------------");
				writer.println("--------------------------------------------------------");
				i++;
			}
			writer.println("return " + level.getName() + ";");
			writer.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
